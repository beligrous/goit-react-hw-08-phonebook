{"version":3,"file":"static/js/928.7d74e26e.chunk.js","mappings":"2RAEaA,EAAOC,EAAAA,EAAAA,KAAH,wHAQJC,EAASD,EAAAA,EAAAA,OAAH,mKASNE,EAAQF,EAAAA,EAAAA,MAAH,iF,SCsDlB,MAlEA,WACE,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,EAAeH,GAAsB,GACnCI,GAAWC,EAAAA,EAAAA,MACjBC,IAAAA,OAAAA,KAAqB,CAAC,GAEtB,IAMMC,EAAgB,SAAAC,GACEL,EAAaM,QAAO,SAACC,EAAKC,GAE9C,OADAA,EAAKf,KAAKgB,gBAAkBJ,EAAKZ,KAAKgB,eAAiBF,EAAIG,KAAKF,GACzDD,CACR,GAAE,IAEeI,SAAWX,EAAaW,QACxCV,GAASW,EAAAA,EAAAA,IAAWP,IACpBF,IAAAA,OAAAA,QAAA,sBACiBE,EAAKZ,KADtB,6BAGAoB,KAEAV,IAAAA,OAAAA,KAAA,UAAwBE,EAAKZ,KAA7B,4BAEH,EAEKoB,EAAQ,WACZnB,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAACR,EAAD,CAAM0B,SA7BoB,SAAAC,GAC1BA,EAAEC,iBAEFZ,EADa,CAAEX,KAAAA,EAAME,OAAAA,GAEtB,EAyBC,WACE,qCAEE,SAACJ,EAAD,CACE0B,KAAK,OACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAQyB,EAAOC,MAA/B,EACVA,MAAO3B,EACPA,KAAK,OACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,SAAChC,EAAD,CACE2B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAAUuB,EAAOC,MAAjC,EACVA,MAAOzB,EACPF,KAAK,SACL4B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACjC,EAAD,CAAQ2B,KAAK,SAAb,2BAGL,E,UCrDD,I,MAAA,EAZA,WACE,IAAMO,GAAS1B,EAAAA,EAAAA,IAAY2B,EAAAA,IACrBxB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,uDAEE,SAACX,EAAD,CAAO0B,KAAK,OAAOG,MAAOI,EAAQN,SAJrB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBlB,GAASyB,EAAAA,EAAAA,GAAUP,EAAOC,OAA1C,MAOlB,E,UCdYO,EAAOtC,EAAAA,EAAAA,GAAH,2EAMJuC,EAAWvC,EAAAA,EAAAA,GAAH,8FAMRwC,EAASxC,EAAAA,EAAAA,OAAH,0GC0DnB,MA3DA,WACE,IAAMY,GAAWC,EAAAA,EAAAA,MACXL,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvByB,GAAS1B,EAAAA,EAAAA,IAAY2B,EAAAA,IACrBK,GAAQhC,EAAAA,EAAAA,IAAYiC,EAAAA,IACpBC,GAAYlC,EAAAA,EAAAA,IAAYmC,EAAAA,IAC1BjC,EAAeH,GAAsB,GAoBzC,OAnBAM,IAAAA,OAAAA,KAAqB,CAAC,IAoBpB,gCACG6B,IACC,SAAC,KAAD,CACEE,MAAM,YACNC,MAAM,KACNC,SAAS,EACTC,UAAU,0BAGbP,GACC,oCAAYA,MAEZ,SAACH,EAAD,WAvBW,KAAXH,EACKxB,EAEIA,EAAawB,QAAO,SAAAhB,GAAI,OACjCA,EAAKf,KAAKgB,cAAc6B,SAASd,EAAOf,cADP,KAqBf8B,KAAI,SAAA/B,GAClB,OACE,UAACoB,EAAD,YACE,4BACGpB,EAAKf,KADR,IACee,EAAKb,WAGpB,SAACkC,EAAD,CAAQW,QAAS,kBAtCT,SAAAhC,GACpBP,GAASwC,EAAAA,EAAAA,IAAcjC,EAAKkC,KAC5BvC,IAAAA,OAAAA,QAAA,sBAAuCK,EAAKf,KAA5C,kBACD,CAmCoCkD,CAAcnC,EAApB,EAA2BS,KAAK,SAAjD,sBALaT,EAAKkC,GAUvB,QAKV,EC7CD,EAlBsB,WACpB,IAAMzC,GAAWC,EAAAA,EAAAA,MAIjB,OAHAV,EAAAA,EAAAA,WAAS,WACPS,GAAS2C,EAAAA,EAAAA,MACV,GAAE,KAED,4BACE,uCACA,SAAC,EAAD,KACA,4BACE,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,SAIP,C","sources":["components/ContactForm/contact-form.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/contact-list.styled.jsx","components/ContactList/ContactList.jsx","Pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  margin: 0 auto;\n  padding: 0;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  display: inline-block;\n  padding: 10px;\n  margin: 10px auto;\n  border-radius: 20px;\n  background-color: burlywood;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin: 5px auto;\n  padding: 5px;\n`;\n","import Notiflix from 'notiflix';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from '../../redux/operations';\nimport { Form, Button, Input } from './contact-form.styled';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  let initContacts = contacts ? contacts : [];\n  const dispatch = useDispatch();\n  Notiflix.Notify.init({});\n\n  const handleSubmitContact = e => {\n    e.preventDefault();\n    const data = { name, number };\n    addingContact(data);\n  };\n\n  const addingContact = data => {\n    const nonEqualArray = initContacts.reduce((acc, item) => {\n      item.name.toLowerCase() !== data.name.toLowerCase() && acc.push(item);\n      return acc;\n    }, []);\n\n    if (nonEqualArray.length === initContacts.length) {\n      dispatch(addContact(data));\n      Notiflix.Notify.success(\n        `The contact ${data.name} was added to contacts !`\n      );\n      reset();\n    } else {\n      Notiflix.Notify.info(`${data.name} is already in contacts!`);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmitContact}>\n      <label>\n        Name\n        <Input\n          type=\"text\"\n          onChange={({ target }) => setName(target.value)}\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <Input\n          onChange={({ target }) => setNumber(target.value)}\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { Input } from '../ContactForm/contact-form.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport { setFilter } from 'redux/filter-slice';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = ({ target }) => dispatch(setFilter(target.value));\n  return (\n    <label>\n      Find contacts by name:\n      <Input type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 350px;\n  padding: 0;\n  margin: 0 auto;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n`;\n\nexport const Delete = styled.button`\n  display: inline-block;\n  background-color: burlywood;\n  border-radius: 15px;\n`;\n","import Notiflix from 'notiflix';\nimport React from 'react';\nimport { FallingLines } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport {\n  getContacts,\n  getFilter,\n  getError,\n  getLoading,\n} from '../../redux/selectors';\nimport { List, Delete, ListItem } from './contact-list.styled';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getLoading);\n  let initContacts = contacts ? contacts : [];\n  Notiflix.Notify.init({});\n\n  const onClickDelete = item => {\n    dispatch(deleteContact(item.id));\n    Notiflix.Notify.success(`The contact ${item.name} was deleted !`);\n  };\n\n  const findContacts = () => {\n    let filtered;\n    if (filter === '') {\n      return initContacts;\n    } else {\n      filtered = initContacts.filter(item =>\n        item.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n    return filtered;\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <FallingLines\n          color=\"burlywood\"\n          width=\"50\"\n          visible={true}\n          ariaLabel=\"falling-lines-loading\"\n        />\n      )}\n      {error ? (\n        <p>Sorry...{error}</p>\n      ) : (\n        <List>\n          {findContacts().map(item => {\n            return (\n              <ListItem key={item.id}>\n                <span>\n                  {item.name}:{item.number}\n                </span>\n\n                <Delete onClick={() => onClickDelete(item)} type=\"button\">\n                  Delete\n                </Delete>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport { fetchContacts } from '../../redux/operations';\n\nconst PhonebookPage = () => {\n  const dispatch = useDispatch();\n  useState(() => {\n    dispatch(fetchContacts());\n  }, []);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["Form","styled","Button","Input","useState","name","setName","number","setNumber","contacts","useSelector","getContacts","initContacts","dispatch","useDispatch","Notiflix","addingContact","data","reduce","acc","item","toLowerCase","push","length","addContact","reset","onSubmit","e","preventDefault","type","onChange","target","value","pattern","title","required","filter","getFilter","setFilter","List","ListItem","Delete","error","getError","isLoading","getLoading","color","width","visible","ariaLabel","includes","map","onClick","deleteContact","id","onClickDelete","fetchContacts"],"sourceRoot":""}