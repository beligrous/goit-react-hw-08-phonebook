{"version":3,"file":"static/js/796.f4d66107.chunk.js","mappings":"4NAwEA,UAlEqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAO,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAC5BK,GAASM,EAAAA,EAAAA,IAAOD,IAChBE,GACD,EAEKA,EAAQ,WACZf,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,4BACE,iEACA,UAAC,KAAD,CAAMY,SAAUN,EAAhB,WACE,qCAEE,SAAC,KAAD,CACEO,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,yIACNC,MAAOrB,EACPsB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAQsB,EAAOF,MAA/B,EACVG,UAAQ,QAGZ,sCAEE,SAAC,KAAD,CACEN,KAAK,QACLlB,KAAK,QACLmB,QAAQ,2CACRE,MAAOnB,EACPoB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAASoB,EAAOF,MAAhC,EACVG,UAAQ,QAGZ,yCAEE,SAAC,KAAD,CACEN,KAAK,WACLlB,KAAK,WACLqB,MAAOjB,EACPkB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBlB,EAAYkB,EAAOF,MAAnC,EACVG,UAAQ,QAGZ,SAAC,KAAD,CAAQN,KAAK,SAASO,QAASd,EAA/B,uBAIDL,IAAS,kEAGf,C,qICpEYoB,EAAOC,EAAAA,EAAAA,IAAH,wHAOJC,EAASD,EAAAA,EAAAA,OAAH,mKASNE,EAAQF,EAAAA,EAAAA,MAAH,gF","sources":["Pages/RegisterPage/RegisterPage.jsx","Pages/RegisterPage/register.styled.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Input } from './register.styled';\nimport { signup } from '../../redux/auth-operations';\nimport { getUserError } from 'redux/selectors';\n\nconst RegisterPage = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(getUserError);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = { name, email, password };\n    dispatch(signup(data));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2>For access phonebook, signup please</h2>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={({ target }) => setName(target.value)}\n            required\n          />\n        </label>\n        <label>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            value={email}\n            onChange={({ target }) => setEmail(target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            required\n          />\n        </label>\n        <Button type=\"submit\" onClick={handleSubmit}>\n          Signup\n        </Button>\n      </Form>\n      {error && <p>Please try another name or email... </p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  margin: 0 auto;\n  padding: 0;\n`;\nexport const Button = styled.button`\n  width: 100px;\n  display: inline-block;\n  padding: 10px;\n  margin: 10px auto;\n  border-radius: 20px;\n  background-color: burlywood;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin: 5px auto;\n  padding: 5px;\n`;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","error","useSelector","getUserError","dispatch","useDispatch","handleSubmit","e","preventDefault","data","signup","reset","onSubmit","type","pattern","title","value","onChange","target","required","onClick","Form","styled","Button","Input"],"sourceRoot":""}